[gcode_macro PRINT_START]
gcode:
  {% set BED = params.BED_TEMP|int %}
  {% set EXTRUDER = params.EXTRUDER_TEMP|int %}
  STATUS_HOMING
  G28
  G90
  STATUS_HEATING
  M190 S{BED}  ;Set bed temperature and wait
  status_meshing
  BED_MESH_CLEAR  ;Clear Bed Mesh
  BED_MESH_CALIBRATE  ;Adaptive Mesh [Auto]
  G28 Z  ;Home Z axis
  Smart_Park
  STATUS_HEATING
  M109 S{EXTRUDER}  ;Set extruder temperature and wait
  STATUS_PRINTING
  LINE_PURGE



[gcode_macro PRINT_END]
description: Print job ending Protocol
gcode:
     M400
     G92 E0
     G1 E-7 F200
     G91
     G0 Z50
     G90
     status_part_ready
     G0 X100 Y210
     TURN_OFF_HEATERS
     M106 S0
     M18
     M117 Printing finished!


[gcode_macro LOAD_FILAMENT]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
      G28
      M109 S240
      # Extrude 600 mm
      G0 E45 F150
      G0 E115 F3150
  	  # Reset extruder position
      M106
      M109 S0
      M106 s0
    {% endif %}

# Reset extruder position
    M109 S240
	# Extrude 600 mm
	G0 E50 F150
	G0 E100 F3150
	# Reset extruder position
    M106
    M109 S0
    M106 s0

[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
      G28
      M109 S240
      G0 X100 Z180 F600
  	# Extrude 100 mm
      G0 E10 F150
      G0 E-40 F150
      G0 E-75 F3150
  	# Reset extruder position
      G92 E0
      M109 S0
    {% endif %}
    
    M109 S240
    G0 X100 Z180 F600
	# Extrude 100 mm
    G0 E10 F150
	G0 E-40 F150
    G0 E-120 F3150
	# Reset extruder position
	G92 E0
    M109 S0

[gcode_macro M0]
gcode:
    PAUSE


[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL


[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####

  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  
  RESUME_BASE {get_params}


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true

  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}

  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE


[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg

  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}
  